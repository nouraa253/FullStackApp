---
- name: Deploy compare-app on Kubernetes
  hosts: kubernetes_master
  become: true
  tasks:
    - name: Copy mysql manifest to target server
      copy:
        src: /var/lib/jenkins/workspace/FullStackApp/k8s/mysql-deployment.yml
        dest: /home/ubuntu/mysql-deployment.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'
        
    - name: Copy backend manifest to target server
      copy:
        src: /var/lib/jenkins/workspace/FullStackApp/k8s/backend-deployment.yml
        dest: /home/ubuntu/backend-deployment.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Copy frontend manifest to target server
      copy:
        src: /var/lib/jenkins/workspace/FullStackApp/k8s/frontend-deployment.yml
        dest: /home/ubuntu/frontend-deployment.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'
        
    - name: Check if deployment exists
      command: kubectl get deployment mysql 
      register: deployment_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Delete existing deployment if found
      command: kubectl delete deployment mysql 
      when: deployment_check.rc == 0
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Apply new deployment and service
      command: kubectl apply -f /home/ubuntu/mysql-deployment.yml
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Check if deployment exists
      command: kubectl get deployment demo-backend
      register: deployment_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Delete existing deployment if found
      command: kubectl delete deployment demo-backend
      when: deployment_check.rc == 0
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Apply new deployment and service
      command: kubectl apply -f /home/ubuntu/backend-deployment.yml
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Check if deployment exists
      command: kubectl get deployment demo-frontend 
      register: deployment_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Delete existing deployment if found
      command: kubectl delete deployment demo-frontend 
      when: deployment_check.rc == 0
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Apply new deployment and service
      command: kubectl apply -f /home/ubuntu/frontend-deployment.yml
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config
 
